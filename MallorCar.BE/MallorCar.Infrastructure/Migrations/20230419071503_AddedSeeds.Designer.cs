// <auto-generated />
using System;
using MallorCar.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MallorCar.Infrastructure.Migrations
{
    [DbContext(typeof(MallorCarDbContext))]
    [Migration("20230419071503_AddedSeeds")]
    partial class AddedSeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MallorCar.Domain.Entities.Car", b =>
                {
                    b.Property<Guid>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CarRegNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uuid");

                    b.HasKey("CarId");

                    b.HasIndex("ModelId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientLastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("d7313719-e5c1-4bd4-b163-f79f13cccfa4"),
                            ClientEmail = "tomaszchuma18@gmail.com",
                            ClientFirstName = "Tomasz",
                            ClientLastName = "Chuma",
                            ClientPhoneNumber = "+48881441146"
                        });
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = new Guid("e2858625-1c59-4144-9337-aa5855675027"),
                            LocationName = "Palma City Center"
                        },
                        new
                        {
                            LocationId = new Guid("ae34c296-26ab-4b14-b5c4-6b952fda024a"),
                            LocationName = "Palma Airport"
                        },
                        new
                        {
                            LocationId = new Guid("4adf23c4-981a-4764-9be5-84794f683de0"),
                            LocationName = "Alcudia"
                        },
                        new
                        {
                            LocationId = new Guid("d2c4813f-4cfe-4d79-8f88-9ceec20a9b7a"),
                            LocationName = "Manacor"
                        });
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Model", b =>
                {
                    b.Property<Guid>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("ModelAcceleration")
                        .HasColumnType("double precision");

                    b.Property<decimal>("ModelBaseDailyPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModelNumOfSeats")
                        .HasColumnType("integer");

                    b.Property<string>("ModelPhotoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModelRange")
                        .HasColumnType("integer");

                    b.Property<string>("ModelSubName")
                        .HasColumnType("text");

                    b.Property<double>("ModelTopSpeed")
                        .HasColumnType("double precision");

                    b.HasKey("ModelId");

                    b.ToTable("Model");

                    b.HasData(
                        new
                        {
                            ModelId = new Guid("a495611d-9a7a-48c0-9776-1f8bd92ba7d9"),
                            ModelAcceleration = 3.7999999999999998,
                            ModelBaseDailyPrice = 50m,
                            ModelName = "X",
                            ModelNumOfSeats = 7,
                            ModelPhotoUrl = "xnormal",
                            ModelRange = 560,
                            ModelTopSpeed = 249.0
                        },
                        new
                        {
                            ModelId = new Guid("8a11c1c2-2050-44f5-bfe2-856ce7810e86"),
                            ModelAcceleration = 2.0,
                            ModelBaseDailyPrice = 20m,
                            ModelName = "S",
                            ModelNumOfSeats = 5,
                            ModelPhotoUrl = "splaid",
                            ModelRange = 637,
                            ModelSubName = "PLaid",
                            ModelTopSpeed = 322.0
                        },
                        new
                        {
                            ModelId = new Guid("4a03fd43-6c9f-4fb9-ba53-d09beb52c9fa"),
                            ModelAcceleration = 3.5,
                            ModelBaseDailyPrice = 80m,
                            ModelName = "Y",
                            ModelNumOfSeats = 5,
                            ModelPhotoUrl = "yperf",
                            ModelRange = 488,
                            ModelSubName = "Performance",
                            ModelTopSpeed = 249.0
                        },
                        new
                        {
                            ModelId = new Guid("aae9a33e-f407-4d30-abd5-d1fdf9a2cc59"),
                            ModelAcceleration = 4.7999999999999998,
                            ModelBaseDailyPrice = 66m,
                            ModelName = "Y",
                            ModelNumOfSeats = 7,
                            ModelPhotoUrl = "ylong",
                            ModelRange = 531,
                            ModelSubName = "Long Range",
                            ModelTopSpeed = 217.0
                        },
                        new
                        {
                            ModelId = new Guid("d2c6aac2-03ed-4af6-b5c7-34a47ad5b048"),
                            ModelAcceleration = 2.5,
                            ModelBaseDailyPrice = 69m,
                            ModelName = "X",
                            ModelNumOfSeats = 6,
                            ModelPhotoUrl = "xplaid",
                            ModelRange = 536,
                            ModelSubName = "Plaid",
                            ModelTopSpeed = 262.0
                        },
                        new
                        {
                            ModelId = new Guid("6ab8242c-395d-4a55-95c7-ab1acabb26a4"),
                            ModelAcceleration = 3.1000000000000001,
                            ModelBaseDailyPrice = 14m,
                            ModelName = "S",
                            ModelNumOfSeats = 5,
                            ModelPhotoUrl = "snormal",
                            ModelRange = 651,
                            ModelTopSpeed = 240.0
                        },
                        new
                        {
                            ModelId = new Guid("c720d513-4d1a-45e7-9a7a-b6f562768f0b"),
                            ModelAcceleration = 3.1000000000000001,
                            ModelBaseDailyPrice = 56m,
                            ModelName = "3",
                            ModelNumOfSeats = 5,
                            ModelPhotoUrl = "3performance",
                            ModelRange = 507,
                            ModelSubName = "Performance",
                            ModelTopSpeed = 261.0
                        },
                        new
                        {
                            ModelId = new Guid("06b2e583-3225-4ef2-92f7-ff1fb957405b"),
                            ModelAcceleration = 5.7999999999999998,
                            ModelBaseDailyPrice = 52m,
                            ModelName = "3",
                            ModelNumOfSeats = 5,
                            ModelPhotoUrl = "3rear",
                            ModelRange = 438,
                            ModelSubName = "RW Drive",
                            ModelTopSpeed = 225.0
                        });
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Rental", b =>
                {
                    b.Property<Guid>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RentalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RentalEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RentalEndLocationId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RentalStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RentalStartLocationId")
                        .HasColumnType("uuid");

                    b.HasKey("RentalId");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientId");

                    b.HasIndex("RentalEndLocationId");

                    b.HasIndex("RentalStartLocationId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Car", b =>
                {
                    b.HasOne("MallorCar.Domain.Entities.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Rental", b =>
                {
                    b.HasOne("MallorCar.Domain.Entities.Car", "Car")
                        .WithMany("Rentals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MallorCar.Domain.Entities.Client", "Client")
                        .WithMany("Rentals")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MallorCar.Domain.Entities.Location", "RentalEndLocation")
                        .WithMany("EndsOfRentals")
                        .HasForeignKey("RentalEndLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MallorCar.Domain.Entities.Location", "RentalStartLocation")
                        .WithMany("BeginningsOfRentals")
                        .HasForeignKey("RentalStartLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Client");

                    b.Navigation("RentalEndLocation");

                    b.Navigation("RentalStartLocation");
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Car", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Client", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Location", b =>
                {
                    b.Navigation("BeginningsOfRentals");

                    b.Navigation("EndsOfRentals");
                });

            modelBuilder.Entity("MallorCar.Domain.Entities.Model", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
